#!/usr/bin/python3

import argparse
import lib
    
parser = argparse.ArgumentParser()
subparsers = parser.add_subparsers()
parser.add_argument("-v", help="Vebose ouput", dest="verbose", action="store_true")

parser_create = subparsers.add_parser("create", help="Create new project")
parser_create.add_argument("name", help="New project name")
parser_create.add_argument("domain", help="Project domain name")
parser_create.add_argument("project_type", help="Project type", choices=["s3", "ec2"])
parser_create.add_argument("-l", "--logging", help="Disable access logging", action="store_true")
parser_create.add_argument("-r", "--region", help="Region", default="EU", choices=["EU", "eu-west-1", "us-west-1", "us-west-2", "ap-south-1", "ap-southeast-1", "ap-southeast-2", "ap-northeast-1", "sa-east-1", "cn-north-1", "eu-central-1"])
parser_create.set_defaults(func=lib.create)

parser_commit = subparsers.add_parser("commit", help="Commit changes to a project")
parser_commit.add_argument("message", help="Commit message")
parser_commit.set_defaults(func=lib.commit)

parser_push = subparsers.add_parser("push", help="Push project to github")
parser_push.set_defaults(func=lib.push)

parser_publish = subparsers.add_parser("publish", help="Push a project to the live servers")
parser_publish.add_argument("-f", help="Push to the production servers")
parser_publish.set_defaults(func=lib.publish)

parser_update = subparsers.add_parser("update", help="Change details about a project")
parser_update.add_argument("-n", help="New project name")
parser_update.add_argument("-d", help="Project domain name")
parser_update.add_argument("-t", help="Project type")
parser_update.set_defaults(func=lib.update)

parser_delete = subparsers.add_parser("delete", help="Remove a project")
parser_delete.add_argument("-p", help="Purge files")
parser_delete.set_defaults(func=lib.delete)

parser_issue = subparsers.add_parser("issue", help="Raise a new issue on Trello")
parser_issue.add_argument("name", help="New issue name")
parser_issue.add_argument("message", help="Issue body")
parser_issue.add_argument("-s", help="Severity")
parser_issue.set_defaults(func=lib.issue)

parser_resolve = subparsers.add_parser("resolve", help="Resolve Trello issue")
parser_resolve.add_argument("id", help="ID of issue to resolve")
parser_resolve.set_defaults(func=lib.resolve)

parser_test = subparsers.add_parser("test", help="Run project tests")
parser_test.set_defaults(func=lib.test)

args = parser.parse_args()
env = lib.Env(args, lib.create)

args.func(args, env)
    